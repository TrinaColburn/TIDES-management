libname ti_nonq "J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload"; run;

/**************************************************************/
/***Code exploring and looking at TIDES I Non Trimester Q data*/
/**************************************************************/

libname ti_nonq "J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload"; run;

/****************************************************/
/***Code exploring and looking at TIDES I nonq data*/
/***************************************************/

/*Macro to put contents in excel file*/
	ods output variables=work.nonqall;
	proc contents data=ti_nonq._all_ ; run;
	proc sort data=work.nonqall; by member num; run;
	options nobyline;
	ods excel file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\nonqdatadictionary.xlsx";
	proc print data=work.nonqall noobs;
	by member;
	pageby member;
	title "Variables in the #BYVal(member) table"; run;
	ods excel close;
	libname ti_nonq "J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload"; run;

	/****************************************************/
	/***Code exploring and looking at TIDES I nonq data*/
	/***************************************************/

	/*Macro to put contents in excel file*/
		ods output variables=work.nonqall;
		proc contents data=ti_nonq._all_ ; run;
		proc sort data=work.nonqall; by member num; run;
		options nobyline;
		ods excel file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\nonqdatadictionary.xlsx";
		proc print data=work.nonqall noobs;
		by member;
		pageby member;
		title "Variables in the #BYVal(member) table"; run;
		ods excel close;

	/*********************/
	/*fix ID Live birth file n=969*/
		data ti_nonq.Livebirths_tidesonly_20201029; set ti_nonq.Livebirths_tidesonly_02202019;
		study_id=input(studyid,best8.);
		child_id=input(SubID,best8.);
		run;

		data ti_nonq.Livebirths_tidesonly_20201029;
		format study_id child_id Sample Dup
		LiveBirthDOB LiveBirthGender BrIn
		ExamIn BrExamDate Y1ExamDate BuclCollected
		BuclDate Dropped;
		set ti_nonq.Livebirths_tidesonly_20201029; run;
			/*drop character vars*/
			data ti_nonq.Livebirths_tidesonly_20201029; set ti_nonq.Livebirths_tidesonly_20201029;
			drop studyID subID; run;

	/*proc compare birth exam and AGD birth*/
		proc compare base=ti_nonq.Birthexam_20191125
					 compare=ti_nonq.Agdbirth_tidesonly_20190430 listequalvar;
		id study_id; run;

	/*Based on Fan's Code, use the compare dataset which is the AGD*/
	/*Create master dataset with vars from AGD plus the other ones from BE that are unique*/
		/*First qc BW (exists in BRR)*/
		/*Birthweight*/
			proc univariate data=ti_nonq.Agdbirth_tidesonly_20190430;
			var  birthweight_kg;
			histogram; run;
			proc print data=ti_nonq.Agdbirth_tidesonly_20190430;
			var study_id sex age_exam;
			where birthweight_kg=.; run;
				/*check BRR*/
				proc sort data=ti_nonq.Agdbirth_tidesonly_20190430; by study_id; run;
				proc sort data=ti_nonq.Brr_2019430; by study_id; run;
				proc compare base=ti_nonq.Agdbirth_tidesonly_20190430
							 compare=ti_nonq.Brr_2019430;
				id study_id; var birthweight_kg; run;

				/*8142 Missing, will hardcode 9207 with BW of 3.2*/
				data ti_nonq.Agdbirth_tidesonly_20190430; set ti_nonq.Agdbirth_tidesonly_20190430;
				if study_id=9207 then birthweight_kg=3.2; run;
		/*Keep BIRTHWEIGHT_KG FROM BRR*/

		/*Now select and Merge BE and AGD*/
			/*Birth Exam unique*/
			data ti_nonq.birthexam_vars; set ti_nonq.Birthexam_20191125;
			keep study_id CV_AGDas_af1 CV_AGDap_ac1 CV_PW1 CV_AGDas_af2 CV_AGDap_ac2 CV_PW2
				 RAD_AGDas_af t_AGDas_af RAD_AGDap_ac t_AGDap_ac RAD_PW t_PW Photo
				 TestLocat_left TestLocat_Right TestUSdone
				 CommentsLeft CommentsRight CommentsUltra
				 TestVol_Pad TestVol_Orchidometer TestVol_Left TestVol_Right
				 Phimosis Hydrocele_left Hydrocele_right
				 InguiHernia_Left InguiHernia_Right
				 Hypospadias_distal Hypospadias_medial Hypospadias_proximal
				 Chordee Cryptorchidism_Left Cryptorchidism_Right
				 Micropenis Malformed_Foreskin Ambiguous_Genitalia Other_Comments
				 Circumcised Bucl BuclDate; run;

			/*AGD unique*/
			data ti_nonq.Agdbirth_vars; set ti_nonq.Agdbirth_tidesonly_20190430;
			keep study_id Age_Exam BabyBMI Rater1 AGDas1_1 AGDas1_2 AGDas1_3 AGDap1_1
				 AGDap1_2 AGDap1_3 AGDaf1_1 AGDaf1_2 AGDaf1_3 AGDac1_1 AGDac1_2
				 AGDac1_3 AGDas_af1 AGDas_af2 PW1_1 PW1_2 PW1_3 PW1 Rater2 AGDas2_1
				 AGDas2_2 AGDas2_3 AGDap2_1 AGDap2_2 AGDap2_3 AGDaf2_1 AGDaf2_2 AGDaf2_3
				 AGDac2_1 AGDac2_2 AGDac2_3 AGDap_ac1 AGDap_ac2
				 PW2_1 PW2_2 PW2_3 PW2 Weight Length
				_ZWEI _ZLEN	_ZWFL _ZBMI	_FWEI _FLEN	_FWFL _FBMI	WAZ	WTPCT
				_BIVWT	HAZ	HTPCT	_BIVHT	WHZ	WHPCT _BIVWHT; run;

			/*Add Residual AGD*/
			proc sort data=ti_nonq.Agdbirth_vars; by study_id; run;
			proc sort data=ti_nonq.birthexam_vars; by study_id; run;
					/*FIX STUDY_iD In RESID*/
					data ti_nonq.Tides_residual_agd_20191025; set ti_nonq.Tides_residual_agd_20191025;
					if StudyID="P6001" then Study_ID=6001;
					if StudyID="P6002" then Study_ID=6002;
					if StudyID="P6003" then Study_ID=6003;
					if StudyID="P6004" then Study_ID=6004;
					if StudyID="P7001" then Study_ID=7001;
					if StudyID="P7002" then Study_ID=7002;
					if StudyID="P7004" then Study_ID=7004;
					if StudyID="P7005" then Study_ID=7005;
					if StudyID="P8001" then Study_ID=8001;
					if StudyID="P8002" then Study_ID=8002;
					if StudyID="P8003" then Study_ID=8003;
					if StudyID="P9001" then Study_ID=9001;
					if StudyID="P9002" then Study_ID=9002;
					if StudyID="P9003" then Study_ID=9003;
					if StudyID="P9004" then Study_ID=9004;
					if StudyID="P9005" then Study_ID=9005; run;

					proc sort data=ti_nonq.Tides_residual_agd_20191025; by study_id; run;

		/*Merge Birth Exam,AGD, and Resid_AGD file*/
		data ti_nonq.BE_AGD_import; merge ti_nonq.Agdbirth_vars
										  ti_nonq.birthexam_vars
										  ti_nonq.Tides_residual_agd_20191025;
		by study_id; run;

		/*Re configure vars*/
		data ti_nonq.BE_AGD_import; format
		study_id studyid Weight Length BabyBMI Age_Exam
		Rater1 AGDas1_1 AGDas1_2 AGDas1_3
		AGDap1_1 AGDap1_2 AGDap1_3
		AGDaf1_1 AGDaf1_2 AGDaf1_3 CV_AGDas_af1
		AGDac1_1 AGDac1_2 AGDac1_3 CV_AGDap_ac1
		AGDas_af1 AGDas_af2
		PW1_1 PW1_2 PW1_3 PW1 CV_PW1
		Rater2 AGDas2_1 AGDas2_2 AGDas2_3 AGDap2_1
		AGDap2_2 AGDap2_3 AGDaf2_1 AGDaf2_2 AGDaf2_3 CV_AGDas_af2
		AGDac2_1 AGDac2_2 AGDac2_3 CV_AGDap_ac2 AGDap_ac1 AGDap_ac2
		PW2_1 PW2_2 PW2_3 PW2 CV_PW2
		RAD_AGDas_af t_AGDas_af RAD_AGDap_ac t_AGDap_ac RAD_PW t_PW
		Photo TestLocat_left TestLocat_Right TestUSdone CommentsLeft
		CommentsRight CommentsUltra TestVol_Pad
		TestVol_Orchidometer TestVol_Left TestVol_Right
		Phimosis Hydrocele_left Hydrocele_right InguiHernia_Left
		InguiHernia_Right Hypospadias_distal Hypospadias_medial
		Hypospadias_proximal Chordee
		Cryptorchidism_Left Cryptorchidism_Right
		Micropenis Malformed_Foreskin Ambiguous_Genitalia Other_Comments
		Circumcised Bucl BuclDate
		_ZWEI _ZLEN _ZWFL _ZBMI _FWEI _FLEN _FWFL _FBMI WAZ WTPCT _BIVWT
		HAZ HTPCT _BIVHT WHZ WHPCT _BIVWHT; set ti_nonq.BE_AGD_import; run;

		/*Compare BE_AGD data with Live birth*/
		/*first compare overlapping variable: buccl*/
			proc compare base=ti_nonq.Birthexam_20191125
						 compare=ti_nonq.Livebirths_tidesonly_20201029 listequalvar maxprint=100;
			id study_id; run;
			/*no unequal, just missing vs. nonmissing*/
			/*Keep more complete info*/

			data agd_2_livebirth; set ti_nonq.Agdbirth_tidesonly_20190430;
			keep study_id child_id StudyID SubID CENTER Cohort Sample
			SEX ExamDate; run;

			data be_2_livebirth; set ti_nonq.Birthexam_20191125;
			keep study_id Smp Gender DOB BirthTime ExamTime; run;

			proc sort data=agd_2_livebirth; by study_id; run;
			proc sort data=be_2_livebirth; by study_id; run;

			/*merge*/
			data agdbe_2_livebirth; merge agd_2_livebirth be_2_livebirth; by study_id; run;

			/*rename common variables in livebirth*/
			data  livebirths_import; set ti_nonq.Livebirths_tidesonly_20201029;
			rename sample=lb_sample; run;

			proc sort data=agdbe_2_livebirth; by study_id; run;
			proc sort data=livebirths_import; by study_id; run;

			/*merge together*/
			data ti_nonq.livebirths_import_1; merge agdbe_2_livebirth livebirths_import; by study_id; run;

			proc contents data=ti_nonq.livebirths_import_1 order=varnum; run;

			data ti_nonq.livebirths_import_1; format
			study_id child_id StudyID SubID CENTER Dup
			Cohort Sample Smp
			SEX LiveBirthGender Gender
			LiveBirthDOB DOB BirthTime
			lb_sample BrIn
			BrExamDate ExamIn ExamDate ExamTime
			Y1ExamDate BuclCollected BuclDate Dropped;
			set ti_nonq.livebirths_import_1; run;
			/*fix label for Y1ExamDate*/
				data ti_nonq.livebirths_import_1; set ti_nonq.livebirths_import_1;
				label Y1ExamDate="Date of Year One Exam"; run;

			/*ti_nonq.livebirths_import_1 is the data that has the most
			  complete information*/

	/***************************************************************/
	/**********Resolve overlapping and/or unique variables**********/
	/**********between other datasets*******************************/
	/*For now, create one dataset --> use Keep/Drop
	  to create three different import datasets*/
	/**************************************************************/
	/*Dataset Agdbirth_gestage_only to compare to gestational age dataset*/
		data ti_nonq.Agdbirth_gestage_only; set ti_nonq.Agdbirth_tidesonly_20190430;
		keep study_id child_id Age_Exam
		GestAge_birth_Days GestAge_Birth_wks
		GestAge_U1 GestAge_U2 GestAge_U3 GestAge_B1
		Ethnicity ExRace InfantEthnicity InfantRace TwoRace; run;

		/*Compare with gest_age file*/
		proc sort data=ti_nonq.Agdbirth_gestage_only; by study_id; run;
		proc sort data=ti_nonq.Gestages_02202019; by study_id; run;
		proc compare base=ti_nonq.Agdbirth_gestage_only
					 compare=ti_nonq.Gestages_02202019;
		id study_id; run;
		/*Values equal -- will import GESTAGE file*/

	/***************************************************************/
	/****dataset Agdbirth_race_eth to compare with race/eth only****/
	/***************************************************************/
	data ti_nonq.Agdbirth_race_eth; set ti_nonq.Agdbirth_tidesonly_20190430;
	keep study_id Ethnicity ExRace InfantEthnicity InfantRace TwoRace; run;
		/*Check mini race/eth which only has infant with main racedate file*/
		proc compare base=nonq_RC.Agdbirth_race_eth compare=nonq_RC.Ti_racedates_20190514; id study_id; run;
		/*Values equal KEEP RACE DATE DATASET but merge tworace variable*/

		/*Merge tworace var*/
		data nonq_RC.Agdbirth_race_eth; set nonq_RC.Agdbirth_race_eth;
		keep study_id TwoRace; run;

		data nonq_RC.Ti_racedates_import; merge nonq_RC.Ti_racedates_20190514
												nonq_RC.Agdbirth_race_eth;
		by study_id; run;

			/*delete unnecessary obs and reformat new merged file*/
			/*First check Infant sex and livebirthgender*/
				proc print data= nonq_RC.Ti_racedates_import;
				var study_id InfantSex_InExam LiveBirthGender;
				where InfantSex_InExam ne InfantSex_InExam LiveBirthGender; run;
				/*No obs in log, drop*/

			/*Drop redundant variables*/
			data nonq_RC.Ti_racedates_import; set nonq_RC.Ti_racedates_import;
			drop StudyID subject_id SubID CENTER LiveBirthGender LiveBirthdob; run;

			/*Restructure*/
			data nonq_RC.Ti_racedates_import; format
			MomAge_Yrs MomRace MomDOB MomEthnic
			DadAge_Yrs DadRace DadEthnic
			BrExEthnicity InfantRace InfantEthnicity BrExRace TwoRace
			Q1date Q1done Q2date Q2done Q3date Q3done AnyQ MayMtSinaiContact
			TIDESII_N1 TIDESII_N2 Dropped ReasonDropped; set nonq_RC.Ti_racedates_import; run;

		/*Clean merged dataset*/
			proc print data=ti_nonq.livebirths_import_2 noobs;
			var study_id child_id CENTER lb_sample SEX LiveBirthGender Gender;
			where SEX ne LiveBirthGender; run;

			/*Fix 7074*/
			data ti_nonq.livebirths_import_2; set ti_nonq.livebirths_import_1;
			drop StudyID SubID;
			if child_id=70743 then Gender="F"; run;

		/*look at lb_sample*/
			%macro lb(type, name);
			proc print data=ti_nonq.livebirths_import_1 noobs;
			where lb_sample=&type; title &name; run;
			%mend;

			%lb(2, "Reported from Center but no BR");
			%lb(3, "Have DOB in tracking but no BR");
			%lb(5, "No baby");

		/*check liverbirth x gender*/
			proc print data=ti_nonq.livebirths_import_2 noobs;
			var study_id LiveBirthGender;
			where gender="F" and LiveBirthGender=1; run;
		/*no obs -- yay!*/

		/*check sex with DOBs*/
			proc print data=ti_nonq.livebirths_import_2 noobs;
			var study_id LiveBirthGender LiveBirthDOB lb_sample;
			title ;
			where (LiveBirthGender=. and LiveBirthDOB ne .) or (LiveBirthGender ne . and LiveBirthDOB=.) ; run;

			/*Study ids 6096, 6209, 9036, 9067*/
			/*fix 6209 (m) and 9067 (m)*/
			data ti_nonq.livebirths_import_2; set ti_nonq.livebirths_import_2;
			if study_id=6209 then LiveBirthGender=1;
			if study_id=9067 then LiveBirthGender=1; run;
			/*6096 and 9036 still missing*/

		/*drop variables with missing data and keep variable
	      with more complete data*/
			data ti_nonq.livebirths_import_2; set ti_nonq.livebirths_import_2;
			drop dob gender sex; run;

		/*Compare live births with gestage just in case*/
		proc sort data=ti_nonq.Agdbirth_gestage_only; by study_id; run;
		proc sort data=ti_nonq.Gestages_02202019; by study_id; run;
		proc compare base=ti_nonq.livebirths_import_2
					 compare=ti_nonq.Gestages_02202019;
		id study_id; run;
		/*Keep base, ti_nonq.livebirths_import_2*/

	/*clean btwn brr and live birth quick*/
		/*Multiple*/
		data nonq_RC.Brr_2019430; set nonq_RC.Brr_2019430;
		if multiple="Y" then dup=1; else dup=.; run;

			proc print data=nonq_RC.Brr_2019430;
			where multiple="Y"; run;

		/*babysex and gender*/
		data nonq_RC.Brr_2019430; set nonq_RC.Brr_2019430;
		if gender="M" then livebirthgender=1;
		if gender="F" then livebirthgender=2; run;

		proc print data=nonq_RC.Brr_2019430;
		var study_id BabySex gender livebirthgender;
		where BabySex ne livebirthgender; run;
		/*no obs selected*/

		proc compare base=ti_nonq.livebirths_import_2
					 compare=nonq_RC.Brr_2019430;
		id study_id; var livebirthgender dup; run;
		/*dup more reliable in BRR, will keep that*/

	/*drop repeated/less complete vars*/
		data nonq_RC.Gestages_02202019; set nonq_RC.Gestages_02202019;
		drop studyid subid center LiveBirthGender LiveBirthDOB; run;

		data nonq_RC.livebirths_import_2; set nonq_RC.livebirths_import_2;
		 rename livebirthgender=childsex;
		 drop Dup Cohort Sample Smp; run;

		 data nonq_RC.Brr_2019430; set nonq_RC.Brr_2019430;
		 rename Lenth_of_Labor=Length_of_Labor; run;

		 data nonq_RC.Gestages_02202019; set nonq_RC.Gestages_02202019;
		 drop StudyID SubID Center LiveBirthGender LiveBirthDOB; run;


	/*Check funky vars in BRR*/
		 data nonq_RC.Brr_2019430; set  nonq_RC.Brr_2019430;
		 drop StudyID SubID CENTER Smp Gender livebirthgender Multiple ; run;

		 proc freq data=nonq_RC.Brr_2019430; run;

	ods word file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\final imported files\vars in BRR to delete.docx";
		 proc freq data=nonq_RC.Brr_2019430;
		 table Specify_labor Specify_other_reason Specify_other_complications; run;

		 proc print data=nonq_RC.Brr_2019430;
		 var study_id Specify_labor; where Specify_labor="dfsfasfas"; run;

		 proc print data=nonq_RC.Brr_2019430;
		 var study_id Specify_other_reason; where Specify_other_reason="fgfg"; run;

		 proc print data=nonq_RC.Brr_2019430;
		 var study_id Specify_other_complications; where Specify_other_complications="dfdfd"; run;
		 ods word close; run;

		 data nonq_RC.Brr_import; set  nonq_RC.Brr_2019430;
		 drop Specify_labor Specify_other_reason Specify_other_complications; run;

	/*edit race date*/
		proc contents data=nonq_RC.Ti_racedates_20190514 order=varnum; run;

		/*Merge race date with live birth*/
		proc compare base=nonq_RC.Livebirths_import_2 compare=nonq_RC.Ti_racedates_import briefsummary; by study_id; run;

		/*Dropped equal -- will drop from racedate*/
		data nonq_RC.Ti_racedates_import; set nonq_RC.Ti_racedates_import;
		drop dropped; run;

		proc contents data=nonq_RC.Livebirths_import_2 order=varnum; run;
		proc contents data=nonq_RC.Ti_racedates_import order=varnum; run;


		proc sort data=nonq_RC.Livebirths_import_2; by study_id; run;
		proc sort data=nonq_RC.Ti_racedates_import; by study_id; run;

		data nonq_RC.livebirth_racedate; merge nonq_RC.Livebirths_import_2 nonq_RC.Ti_racedates_import; by study_id; run;

		/*restructure*/
		data nonq_RC.livebirth_racedate; format
		study_id child_id Consented
		CENTER Cohort lb_sample Sample Smp
		LiveBirthDOB BirthTime LiveBirthGender dup BrExEthnicity InfantRace InfantEthnicity BrExRace TwoRace
		MomDOB MomAge_Yrs MomRace MomEthnic DadAge_Yrs DadRace DadEthnic
		Q1date Q1done Q2date Q2done Q3date Q3done AnyQ
		BrIn BrExamDate ExamIn ExamDate ExamTime Y1ExamDate BuclCollected BuclDate MayMtSinaiContact
		TIDESII_N1 TIDESII_N2 Dropped ReasonDropped; set nonq_RC.livebirth_racedate; run;

		data nonq_RC.livebirth_racedate; set nonq_RC.livebirth_racedate;
		drop InfantSex_InExam BrExamDate; run;

		proc print data=nonq_RC.livebirth_racedate;
		var study_id ExamDate BrExamDate;
		where ExamDate ne BrExamDate; run;

		data nonq_RC.livebirth_racedate; set nonq_RC.livebirth_racedate;
		rename LiveBirthDOB=child_dob;
		rename LiveBirthGender=child_sex;
		rename examdate=birthexam_date; run;

		proc contents data=nonq_RC.livebirth_racedate order=varnum; run;

	/*poss recode*/
	ods word file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\final imported files\vars to recode.docx";
	proc freq data=nonq_RC.Be_agd_import;
	table Photo -- TestUSdone TestVol_Pad Phimosis -- Ambiguous_Genitalia Circumcised Bucl; run;

	proc freq data=nonq_RC.Brr_import;
	table Labor_Induction Pain_medication Antibiotics Neonatal_Resuscitation Adverse_conditions Abnormal_PE_Findings; run;
	ods word close;


	/**********************************/
	/*Appropriately recode variables in
	  Birth Exam and BRR*/
	/*********************************/
		/*Birth Exam*/

		/*recode testicle location*/
		data nonq_RC.Be_agd_import_1; set nonq_RC.Be_agd_import;
		if TestLocat_left="Descended" then TestLocat_left_recode=0;
		if TestLocat_right="Descended" then TestLocat_right_recode=0;
		if TestLocat_left="Undescend" then TestLocat_left_recode=1;
		if TestLocat_right="Undescend" then TestLocat_right_recode=1; run;

		proc freq data=nonq_RC.Be_agd_import_1;
		table TestLocat_left_recode TestLocat_right_recode; run;
		%macro berecode(orig, rec);
		data nonq_RC.Be_agd_import_1; set nonq_RC.Be_agd_import_1;
		if &orig="N" then &rec=0;
		if &orig="Y" then &rec=1;
		run;
			proc freq data=nonq_RC.Be_agd_import_1;
			table &orig &rec; run;
		%mend;

		%berecode(Photo, Photo_recode);
		%berecode(TestUSdone, TestUSdone_recode);
		%berecode(TestVol_Pad, TestVol_Pad_recode);
		%berecode(Phimosis, Phimosis_recode);
		%berecode(Hydrocele_left, Hydrocele_left_recode);
		%berecode(Hydrocele_right, Hydrocele_right_recode);
		%berecode(Hypospadias_distal, Hypospadias_distal_recode);
		%berecode(Chordee, Chordee_recode);
		%berecode(Malformed_Foreskin, Malformed_Foreskin_recode);
		%berecode(Circumcised,Circumcised_recode);
		%berecode(Bucl,Bucl_recode);
		/*Drop old variables*/
			data nonq_RC.Be_agd_import_2; set nonq_RC.Be_agd_import_1;
			drop photo TestLocat_left TestLocat_Right TestUSdone TestVol_Pad Phimosis Hydrocele_left Hydrocele_right
			Hypospadias_distal Chordee Malformed_Foreskin Circumcised Bucl; run;

		/*Rename recoded*/
		data nonq_RC.Be_agd_import_2; set nonq_RC.Be_agd_import_2;
		rename	 Photo_recode=Photo;
		rename 	 TestLocat_left_recode = TestLocat_left;
		rename   TestLocat_right_recode = TestLocat_Right;
		rename	 TestUSdone_recode=TestUSdone;
		rename	 TestVol_Pad_recode=TestVol_Pad;
		rename	 Phimosis_recode=Phimosis;
		rename	 Hydrocele_left_recode=Hydrocele_left;
		rename	 Hydrocele_right_recode=Hydrocele_right;
		rename	 Hypospadias_distal_recode=Hypospadias_distal;
		rename	 Chordee_recode	=	Chordee	;
		rename	 Malformed_Foreskin_recode	=	Malformed_Foreskin;
		rename	 Circumcised_recode	=	Circumcised	;
		rename	 Bucl_recode	=	Bucl; run;

			data nonq_RC.Be_agd_import_2; set nonq_RC.Be_agd_import_2;
			drop Bucl BuclDate; run;

		/*Reformat*/
		data nonq_RC.Be_agd_import_2; format
		study_id age_exam sex Weight Length BabyBMI
		Rater1
		AGDas1_1 AGDas1_2 AGDas1_3
		AGDaf1_1 AGDaf1_2 AGDaf1_3
		AGDas_af1 CV_AGDas_af1
		AGDap1_1 AGDap1_2 AGDap1_3
		AGDac1_1 AGDac1_2 AGDac1_3
		AGDap_ac1 CV_AGDap_ac1
		PW1_1 PW1_2 PW1_3 PW1 CV_PW1
		Rater2
		AGDas2_1 AGDas2_2 AGDas2_3
		AGDaf2_1 AGDaf2_2 AGDaf2_3
		AGDas_af2 CV_AGDas_af2
		AGDap2_1 AGDap2_2 AGDap2_3
		AGDac2_1 AGDac2_2 AGDac2_3
		AGDap_ac2 CV_AGDap_ac2
		PW2_1 PW2_2 PW2_3 PW2 CV_PW2
		RAD_AGDas_af t_AGDas_af
		RAD_AGDap_ac t_AGDap_ac
		RAD_PW t_PW
		RSIDas_af RSIDap_ac
		Photo
		TestLocat_left TestLocat_Right TestUSdone
		CommentsLeft CommentsRight CommentsUltra
		TestVol_Pad TestVol_Orchidometer
		TestVol_Left TestVol_Right
		Phimosis
		Hydrocele_left Hydrocele_right
		InguiHernia_Left InguiHernia_Right
		Hypospadias_distal Hypospadias_medial Hypospadias_proximal
		Chordee Cryptorchidism_Left Cryptorchidism_Right
		Micropenis Malformed_Foreskin Ambiguous_Genitalia
		Other_Comments Circumcised Bucl BuclDate
		_ZWEI _ZLEN _ZWFL _ZBMI _FWEI _FLEN _FWFL _FBMI WAZ
		WTPCT _BIVWT HAZ HTPCT _BIVHT WHZ WHPCT _BIVWHT; set nonq_RC.Be_agd_import_2; run;


	/*BRR*/
	/*Recode and drop*/
		ods word file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\final imported files\BRR recode.docx";
		/*Yes/No Variables*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import; run;
		%macro brrecode(orig, rec);
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
		if &orig="N" then &rec=0;
		if &orig="Y" then &rec=1;
		run;
			proc freq data=nonq_RC.Brr_import_1;
			table &orig &rec; run;
		%mend;
		%brrecode(Pain_medication, Pain_medication_recode);
		%brrecode(Antibiotics, Antibiotics_recode);
		%brrecode(Neonatal_Resuscitation, Neonatal_Resuscitation_recode);
		%brrecode(Adverse_conditions, Adverse_conditions_recode);
		%brrecode(Abnormal_PE_Findings, Abnormal_PE_Findings_recode);

			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop Pain_medication Antibiotics Neonatal_Resuscitation Adverse_conditions Abnormal_PE_Findings; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename Pain_medication_recode=Pain_medication;
			rename Antibiotics_recode=Antibiotics;
			rename Neonatal_Resuscitation_recode=Neonatal_Resuscitation;
			rename Adverse_conditions_recode=Adverse_conditions;
			rename Abnormal_PE_Findings_recode=Abnormal_PE_Findings; run;

		/*Labor induction*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			if Labor_Induction="N" then Labor_Induction_recode=0;
			if Labor_Induction="NA (scheduled c-section)" then Labor_Induction_recode=77;
			if Labor_Induction="Other" then Labor_Induction_recode=33;
			if Labor_Induction="Y" then Labor_Induction_recode=1; run;

			proc freq data=nonq_RC.Brr_import_1;
			table Labor_Induction Labor_Induction_recode; run;

			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop Labor_Induction; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename Labor_Induction_recode=Labor_Induction; run;

		/*Delivery Type*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
		if Delivery="C-section" then delivery_recode=2;
		if delivery="Vaginal" then delivery_recode=1; run;
			proc freq data=nonq_RC.Brr_import_1;
			table Delivery Delivery_recode; run;

			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop Delivery; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename Delivery_recode=Delivery; run;

		/*Presentation_at_delivery*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			if Presentation_at_delivery="Normal" then Presentation_at_delivery_recode=0;
			if Presentation_at_delivery="Breech" then Presentation_at_delivery_recode=1;
			if Presentation_at_delivery="Transverse" then Presentation_at_delivery_recode=2;
			if Presentation_at_delivery="NA due to C-section" then Presentation_at_delivery_recode=77; run;
				proc freq data=nonq_RC.Brr_import_1;
				table Presentation_at_delivery Presentation_at_delivery_recode; run;

			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop Presentation_at_delivery; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename Presentation_at_delivery_recode=Presentation_at_delivery; run;

		/*Instruments*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
		if instruments="None" then instruments_recode=0;
		if instruments="Forceps" then instruments_recode=1;
		if instruments="Vacuum" then instruments_recode=2; run;
			proc freq data=nonq_RC.Brr_import_1;
			table instruments instruments_recode; run; /*20 are just missing*/


			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop instruments; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename instruments_recode=instruments; run;

		/*Complications*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			if Complications="None" then Complications_recode=0;
			if Complications="Meconium" then Complications_recode=1;
			if Complications="Breech presentation" then Complications_recode=2;
			if Complications="Shoulder dystocia" then Complications_recode=3;
			if Complications="Other" then Complications_recode=33; run;
				proc freq data=nonq_RC.Brr_import_1;
				table Complications Complications_recode; run;

			/*Drop*/
			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			drop Complications; run;

			data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			rename Complications_recode=Complications; run;

		/*Reason_NonVaginalDelivery (minor correction)*/
		data nonq_RC.Brr_import_1; set nonq_RC.Brr_import_1;
			if Reason_NonVaginalDelivery="Fetal distress"
			then Reason_NonVaginalDelivery="Fetal Distress"; run;
				proc freq data=nonq_RC.Brr_import_1;
				table Reason_NonVaginalDelivery; run;
			/*keep as open text*/

	/*branching Variables*/
		/*figure out delivery vs. Reason_NonVaginalDelivery*/
		proc print data=nonq_RC.Brr_import_1 noobs;
		var study_id delivery Reason_NonVaginalDelivery;
		where delivery=2 and Reason_NonVaginalDelivery=""; run;
		/*n=11 These should be missing*/
			data nonq_RC.Brr_import_2; set nonq_RC.Brr_import_1;
			if delivery=2 and Reason_NonVaginalDelivery="" then Reason_NonVaginalDelivery="Missing"; run;
				proc freq data=nonq_RC.Brr_import_2;
				table Reason_NonVaginalDelivery; run;

		/*Adverse Conditions*/
		proc print data=nonq_RC.Brr_import_2 noobs;
		var study_id Adverse_conditions Specify_Adverse_conditions;
		where Adverse_conditions=1 and Specify_Adverse_conditions=""; run;
			/*only 1 (7098) will code as missing*/
			data nonq_RC.Brr_import_2; set nonq_RC.Brr_import_2;
			if study_id=7098 then Specify_Adverse_conditions="Specify Missing"; run;
				proc print data=nonq_RC.Brr_import_2 noobs;
				var study_id Adverse_conditions Specify_Adverse_conditions;
				where Adverse_conditions=1; run;

		/*abnormal PE findings*/
		proc print data=nonq_RC.Brr_import_2 noobs;
		var study_id Abnormal_PE_Findings Explain_Findings;
		where Abnormal_PE_Findings=1 and Explain_Findings=""; run;
			/*three missings - will code as missing*/
			data nonq_RC.Brr_import_2; set nonq_RC.Brr_import_2;
			if Abnormal_PE_Findings=1 and Explain_Findings="" then Explain_Findings="Missing"; run;

				proc print data=nonq_RC.Brr_import_2 noobs;
				var study_id Abnormal_PE_Findings Explain_Findings;
				where Abnormal_PE_Findings=1; run;
	ods word close;

	/*restructure BRR*/
	data nonq_RC.Brr_import_2; format
	study_id child_id
	brr_date brr_time
	reviewer
	date_of_delivery time_of_delivery
	babysex birthweight_kg
	labor_induction length_of_labor
	delivery reason_nonvaginaldelivery presentation_at_delivery
	instruments complications pain_medication
	antibiotics apgar_score
	neonatal_resuscitation adverse_conditions
	specify_adverse_conditions
	pg2_reviewer pg2_comments
	admission abnormal_pe_findings explain_findings
	pg3_reviewer pg3_comments; set nonq_RC.Brr_import_2; run;


	/*Check Gestational Age*/
		proc univariate data=nonq_rc.Brr_import_1;
		var GestAge_birth_Days GestAge_birth_Wks Birthweight_kg; run;

		proc print data=nonq_rc.Brr_import_1;
		where birthweight_kg=.; run;

		proc print data=nonq_rc.Brr_import_1;
		where GestAge_birth_Wks=.; run;

		proc print data=nonq_RC.Gestages_02202019;
		where study_id=9171; run;
	/*drop gest age vars, one in gest age file more complete*/
	proc contents data=nonq_RC.Brr_import_2 order=varnum; run;

	/*get gest_age to live birth file*/
	/*First separate out gest age variables*/
		data nonq_rc.Gestages_lmp_days_wks; set nonq_rc.Gestages_02202019;
		keep study_id TIDES_Women_LMP gestage_birth_days gestage_birth_wks; run;

		data nonq_rc.Gestages_4_biospec; set nonq_rc.Gestages_02202019;
		keep study_id TIDES_Women_LMP GestAge_U1 GestAge_U2 GestAge_U3 GestAge_B1; run;

	/*Merge*/
		proc sort data=nonq_rc.Gestages_lmp_days_wks; by study_id; run;
		proc sort data=nonq_rc.Gestages_4_biospec; by study_id; run;
		proc sort data=nonq_rc.Livebirth_racedate; by study_id; run;

		data nonq_rc.Livebirth_racedate_import; merge nonq_rc.Livebirth_racedate nonq_rc.Gestages_lmp_days_wks;
		by study_id; run;

	/*Fix live birth a little again*/
		proc freq data=nonq_rc.Livebirth_racedate_import;
		table maymtsinaicontact; run;

		data nonq_rc.Livebirth_racedate_import_1; set nonq_rc.Livebirth_racedate_import;
		if maymtsinaicontact="yes" then maymtsinaicontact_recode=1;
		if maymtsinaicontact="no" then maymtsinaicontact_recode=0; run;
				proc freq data=nonq_rc.Livebirth_racedate_import_1;
				table maymtsinaicontact maymtsinaicontact_recode; run;

		data nonq_rc.Livebirth_racedate_import_1; set nonq_rc.Livebirth_racedate_import_1;
		drop maymtsinaicontact; run;
			data nonq_rc.Livebirth_racedate_import_1; set nonq_rc.Livebirth_racedate_import_1;
			rename maymtsinaicontact_recode=maymtsinaicontact; run;

		/*reconfigure*/
			data nonq_rc.Livebirth_racedate_import_1;
			format study_id subject_id child_id
				   consented center cohort lb_sample sample smp
				   child_dob birthtime gestage_birth_days gestage_birth_wks
				   child_sex dup
				   brexethnicity infantrace infantethnicity brexrace tworace
				   momdob momage_yrs momrace momethnic
				   dadage_yrs dadrace dadethnic
				   q1done q1date q2done	q2date q3done q3date
				   anyq	brin examin birthexamdate birthexamtime
				   y1examdate buclcollected	bucldate maymtsinaicontact
				   tidesii_n1 tidesii_n2 dropped reasondropped;
			set nonq_rc.Livebirth_racedate_import_1; run;

			data nonq_rc.Livebirth_racedate_import_1; set nonq_rc.Livebirth_racedate_import_1;
			rename  birthexam_date=birthexamdate;
			rename  ExamTime=birthexamtime; run;

	/*Year One AGD*/
		proc contents data=ti_nonq.Agdy1_2019430 order=varnum; run;

		/*Keep Pertinent Vars*/
			data  nonq_rc.Agdy1_import; set ti_nonq.Agdy1_2019430;
			drop child_id CENTER ExamDate
				 GestAge_birth_Days GestAge_Birth_wks
				 GestAge_U1 GestAge_U2 GestAge_U3; run;

				 	/*...but compare dropped vars with live birth file*/
				 	data Agdy1_vars2comp; set ti_nonq.Agdy1_2019430;
					keep study_id child_id CENTER ExamDate
						 GestAge_birth_Days GestAge_Birth_wks
						 GestAge_U1 GestAge_U2 GestAge_U3; run;
						 proc sort data=Agdy1_vars2comp; by study_id; run;
						 proc sort data=nonq_rc.Livebirth_racedate_import_1; by study_id; run;
						 proc compare base=Agdy1_vars2comp compare=nonq_rc.Livebirth_racedate_import_1;
						 id study_id; run;
								proc freq data=nonq_rc.Livebirth_racedate_import_1;
								table center; run;
								data nonq_rc.Livebirth_racedate_import_1; set nonq_rc.Livebirth_racedate_import_1;
								if study_id < 7000 and center=. then center=6;
								if (6999 < study_id < 8000) and (center=.) then center=7;
								if (7999 < study_id < 9000) and (center=.) then center=8;
								if 8999 < study_id and center=. then center=9;
								run;
						/*Go with Gest age, more recent updates by Fan in 2016 versus 2015*/

				/*rename repeated mean variables so it's easy to import BE and One Year*/
				data nonq_rc.Agdy1_import_1; set nonq_rc.Agdy1_import;
					rename AGDas1 = AGDas_af1;
					rename AGDas2 = AGDas_af2;
					rename AGDap1 = AGDap_ac1;
					rename AGDap2 = AGDap_ac2; run;

				/*restructure*/
					data nonq_rc.Agdy1_import_1; format
					study_id Age_Exam sex Weight Length BabyBMI Rater1
					AGDas1_1 AGDas1_2 AGDas1_3 AGDas_af1
					AGDap1_1 AGDap1_2 AGDap1_3 AGDap_ac1
					PW1_1 PW1_2 PW1_3 PW1
					Rater2
					AGDas2_1 AGDas2_2 AGDas2_3 AGDas_af2
					AGDap2_1 AGDap2_2 AGDap2_3 AGDap_ac2
					PW2_1 PW2_2 PW2_3 PW2;
					set nonq_rc.Agdy1_import_1; run;

					proc freq data=nonq_rc.Agdy1_import_1;
					table rater2; run;
			/****************************/
			/*END OF EDITING FOR IMPORT*/
		    /****************************/


	/***************************************/
	/*copy "import" files to import folder*/
	/**************************************/
	libname imports "J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\file imported files_v2"; run;
		data imports.Livebirth_racedate_import_1; set nonq_RC.Livebirth_racedate_import_1; run;
		data imports.Be_agd_import_2; set nonq_RC.Be_agd_import_2; run;
		data imports.Gestages_4_biospec; set nonq_RC.Gestages_4_biospec; run;
		data imports.Brr_import_2; set nonq_RC.Brr_import_2; run;
		data imports.Agdy1_import_1; set nonq_RC.Agdy1_import_1; run;

	/*use this Proc Contents as base to create data dictionary for REDCap*/

			ods output variables=imports.nonq4import;
			proc contents data=imports._all_ ; run;
			proc sort data=imports.nonq4import; by member num; run;
			options nobyline;
			ods excel file="J:\PM\TIDES_Data\REDCap Master Database\TIDES I\Mass upload\file imported files_v2\RC base.xlsx";
			proc print data=imports.nonq4import noobs;
			by member;
			pageby member;
			title "RC base"; run;
			ods excel close;

	/*Final Live birth Check*/
	/*Check with Subject tracking*/

	/*Get Subject Tracking Vars to Live births file*/
		/*Do proc compare for variables*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking NOVALUES LISTVAR maxprint=1000 out=vars;
			id study_id;
			title;
			run;

	/*do compare with common yet slightly different variable name variables*/
			proc contents data=imports.Livebirth_racedate_import_1 order=varnum;
			proc contents data=imports.Tides_subject_tracking order=varnum; run;

			/*Child DOB*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking maxprint=1000;
			id study_id; var child_dob; with infantdob; title; run;

			/*Reason Dropped*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking maxprint=1000;
			id study_id; var reasondropped; with reasondropped; title; run;

			/*Reason Dropped*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking maxprint=1000;
			id study_id; var dropped; with dropped; title; run;

			/*Reason Dropped*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking maxprint=1000;
			id study_id; var y1examdate; with yr1exam_date; title; run;
			/*No diff in reason dropped Live birth with correct/more complete information*/

					/*Fix some One Year Dates in Livebirth_racedate*/
					data imports.Livebirth_racedate_import_1; set imports.Livebirth_racedate_import_1;
						if study_id=8019 then y1examdate='10OCT2012'd;
						if study_id=8274 then y1examdate='06MAY2014'd;
						if study_id=9214 then y1examdate='13MAY2014'd; run;


			/*LMP Information*/
			proc compare base=imports.Livebirth_racedate_import_1
			compare=imports.Tides_subject_tracking maxprint=1000;
			id study_id; var TIDES_Women_LMP; with LMP; title; run;

					/*Get LMP data from Fan's Files*/
					libname lmp "J:\PM\TIDES\Data\DataFiles\GestationalAges\11-2016"; run;
						proc contents data=lmp.Tides_lmp_data_112116 order=varnum; run;

						data imports.Tides_lmp_data_112116; set lmp.Tides_lmp_data_112116;
						if studyid="P6001" then study_id=6001;
						if studyid="P6002" then study_id=6002;
						if studyid="P6003" then study_id=6003;
						if studyid="P6004" then study_id=6004;
						if studyid="P6005" then study_id=6005;
						if studyid="P6006" then study_id=6006;
						if studyid="P7001" then study_id=7001;
						if studyid="P7002" then study_id=7002;
						if studyid="P7003" then study_id=7003;
						if studyid="P7004" then study_id=7004;
						if studyid="P7005" then study_id=7005;
						if studyid="P8001" then study_id=8001;
						if studyid="P8002" then study_id=8002;
						if studyid="P8003" then study_id=8003;
						if studyid="P8004" then study_id=8004;
						if studyid="P8005" then study_id=8005;
						if studyid="P9001" then study_id=9001;
						if studyid="P9002" then study_id=9002;
						if studyid="P9003" then study_id=9003;
						if studyid="P9004" then study_id=9004;
						if studyid="P9005" then study_id=9005; run;

						/*Add date info to REDCap*/
						data imports.Tides_lmp_data_112116; set imports.Tides_lmp_data_112116;
						 drop studyid subID Center; run;

						data imports.Tides_lmp_data_112116;
						format study_id LiveBirthDOB LiveBirthGender
						BrIn ExamIn GestAge_birth_Days
						GestAgeEstLMP Q5_LMP LMP
						EDD EDD_method US_Date EDD_US USestLMP
						EDDestLMP TIDES_Women_LMP
						Dropped
						flag;
						set imports.Tides_lmp_data_112116; run;

						proc sort data=imports.Tides_lmp_data_112116; by study_id; run;

						/*General Proc Compare*/
						proc compare base=imports.Tides_lmp_data_112116
									 compare=imports.Livebirth_racedate_import_1 maxprint=1000;
									 id study_id; run;
						/*Gest age complete vs. not complete*/

						/*Specific proc compare*/
						proc compare base=imports.Tides_lmp_data_112116
						compare=imports.Livebirth_racedate_import_1;
						var LiveBirthDOB ; with child_dob; id study_id; run;

						proc compare base=imports.Tides_lmp_data_112116
						compare=imports.Livebirth_racedate_import_1;
						var LiveBirthgender ; with child_sex; id study_id; run;

						proc compare base=imports.Tides_lmp_data_112116
						compare=imports.Livebirth_racedate_import_1;
						var ExamIn ; with ExamIN; id study_id; run;

						proc compare base=imports.Tides_lmp_data_112116
						compare=imports.Livebirth_racedate_import_1;
						var BrIN ; with BrIN; id study_id; run;

						proc compare base=imports.Tides_lmp_data_112116
						compare=imports.Livebirth_racedate_import_1;
						var dropped ; with dropped; id study_id; run;
						/*Live Birth more complete info*/

							/*keep true LMP vars for import*/
							data imports.lmpdata_4_import; set imports.Tides_lmp_data_112116;
							keep study_id GestAgeEstLMP Q5_LMP LMP
								 EDD EDD_method US_Date EDD_US USestLMP
								 EDDestLMP TIDES_Women_LMP flag; run;

								 proc print data=imports.Tides_lmp_data_112116;
								  where flag=1; run;

			/*Subset out q date/done vars from Live birth
			data imports.livebirth_qdonedate; set imports.Livebirth_racedate_import_1;
			keep study_id q1done -- reasondropped; run; IMPORT THIS SEPARATE AND AS UNVERIFIED*/

				/*Keep from subject tracking vars to import*/
				data imports.subtrck_importvars; set imports.Tides_subject_tracking;
				keep study_id ConsentDate T1_ApptDate -- Yr1date_portal Yr1date Dday ReasonDroppedFromStudy; run;
				/*Not including "sub", no idea what it is*/
							/*put subject tracking q1done-q3done dates in dates library*/
							data dates.subtrck_qdatevars; set imports.Tides_subject_tracking;
							keep study_id q1date q2date q3date; run;

				/*Merge to live births*/
				proc sort data=imports.Livebirth_racedate_import_1; by study_id; run;
				proc sort data=imports.subtrck_importvars; by study_id; run;

				data imports.Livebirth_racedate_subtrack;
				merge imports.Livebirth_racedate_import_1 /*n=46 vars*/ imports.subtrck_importvars /*16 vars*/;
				by study_id; run;
				/*61 vars!*/

				/*merge lmp data*/
				proc sort data=imports.Livebirth_racedate_subtrack; by study_id; run;
				proc sort data=imports.lmpdata_4_import; by study_id; run;
						data imports.Livebirth_racedate_subtrack; set imports.Livebirth_racedate_subtrack;
						drop tides_women_lmp; run;
				data imports.LB_racedt_subtrk_lmp;
				merge imports.Livebirth_racedate_subtrack imports.lmpdata_4_import;
				by study_id; run;

			/*Restructure*/
				proc contents data=imports.LB_racedt_subtrk_lmp order=varnum; run;
					data imports.LB_racedt_subtrk_lmp; format
					study_id
					subject_id
					child_id
					consented
					consentdate
					center
					cohort
					lb_sample
					sample
					smp
					child_dob
					birthtime
					child_sex
					dup
					twinchild_id
					brexethnicity
					infantrace
					infantethnicity
					brexrace
					tworace
					momdob
					momage_yrs
					momrace
					momethnic
					dadage_yrs
					dadrace
					dadethnic
					gestage_birth_days
					gestage_birth_wks
					GestAgeEstLMP
					Q5_LMP
					LMP
					EDD
					EDD_method
					US_Date
					EDD_US
					USestLMP
					EDDestLMP
					TIDES_Women_LMP
					flag
					T1_ApptDate
					q1done
					Q1Date_paper
					Q1Date_portal
					q1date
					T2_ApptDate
					q2done
					Q2Date_paper
					Q2Date_portal
					q2date
					T3_ApptDate
					q3done
					Q3Date_paper
					Q3Date_portal
					q3date
					anyq
					brin
					examin
					birthexamdate
					birthexamtime
					y1examdate
					Yr1date
					yr1date_paper
					Yr1date_portal
					buclcollected
					bucldate
					maymtsinaicontact
					tidesii_n1
					tidesii_n2
					dropped
					Dday
					reasondropped ReasonDroppedFromStudy; set imports.LB_racedt_subtrk_lmp; run;

	/*drop child_id=70743*/
	data imports.LB_racedt_subtrk_lmp_1; set imports.LB_racedt_subtrk_lmp;
	if child_id=70743 then delete; run;

	data imports.fam_info;  set imports.LB_racedt_subtrk_lmp_1;
	keep
	study_id
	child_id
	consented
	consentdate
	center
	cohort
	lb_sample
	sample
	smp
	child_dob
	birthtime
	child_sex
	dup
	brexethnicity
	infantrace
	infantethnicity
	brexrace
	tworace
	momdob
	momage_yrs
	momrace
	momethnic
	dadage_yrs
	dadrace
	dadethnic;
	run;

	data imports.lmp; set imports.LB_racedt_subtrk_lmp_1;
	keep study_id gestage_birth_days
	gestage_birth_wks
	gestageestlmp
	q5_lmp
	lmp
	edd
	edd_method
	us_date
	edd_us
	usestlmp
	eddestlmp
	tides_women_lmp
	flag; run;

	data imports.drop; set imports.LB_racedt_subtrk_lmp_1;
	keep study_id
	t1_apptdate
	q1done
	q1date_paper
	q1date_portal
	q1date
	t2_apptdate
	q2done
	q2date_paper
	q2date_portal
	q2date
	t3_apptdate
	q3done
	q3date_paper
	q3date_portal
	q3date
	anyq
	brin
	examin
	birthexamdate
	birthexamtime
	y1examdate
	yr1date_paper
	yr1date_portal
	yr1date
	buclcollected
	bucldate
	maymtsinaicontact
	tidesii_n1
	tidesii_n2
	dropped
	dday
	reasondropped
	reasondroppedfromstudy; run;


	/*Minor Recode of complete reason dropped*/
	proc freq data=IMPORTS.Drop;
	table reasondropped reasondropped_rec; run;

	DATA IMPORTS.Drop; set IMPORTS.Drop;
	if reasondropped="REMAINED IN STUDY" then reasondropped_rec=1;
	if reasondropped="Medical" then reasondropped_rec=2;
	if reasondropped="Moved" then reasondropped_rec=3;
	if reasondropped="Quit" then reasondropped_rec=4; run;

	DATA IMPORTS.Drop; set IMPORTS.Drop;
	drop reasondropped;
	rename reasondropped_rec=reasondropped; run;

	/*minor recode of admission in BRR*/
	proc freq data=IMPORTS.Brr_import_2;
	table admission admit_rec; run;

	DATA IMPORTS.Brr_import_2; set IMPORTS.Brr_import_2;
	if admission="Newborn Nursery" then admit_rec=1;
	if admission="NICU" then admit_rec=2;
	if admission="Intermediate Nursery" then admit_rec=3; run;


	DATA  IMPORTS.Brr_import_2; set IMPORTS.Brr_import_2;
	drop admission;
	rename admit_rec=admission; run;
